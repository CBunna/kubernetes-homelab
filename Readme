🧪 Home Lab Kubernetes Cluster for DevOps Learning
Welcome to my home lab project! This setup is designed as a personal learning environment to explore Kubernetes, DevOps tools, and infrastructure automation using repurposed hardware and open-source technologies.

🚀 Project Goals
Learn and experiment with Kubernetes architecture and components.

Gain hands-on experience with container orchestration, CI/CD, and infrastructure as code.

Build a cost-effective home lab using Proxmox VE and an old Dell laptop.

🏗️ Lab Infrastructure
Component	Description
🖥️ Hardware	Old Dell Laptop (8GB RAM, 256GB SSD)
🔧 Hypervisor	Proxmox VE
🌐 Network	Virtual network bridged for all VMs
📦 Nodes	1x Kubernetes Master, 2x Kubernetes Workers
🧰 Tools	Kubeadm, kubectl,kubelet, Helm, Docker/Containerd

🧱 Virtual Machines
All VMs run a lightweight Linux distribution (e.g. Ubuntu Server).

Kubernetes Cluster Layout
lua
Copy
Edit
+-----------------+       +-----------------+       +-----------------+
|  Master Node    | <---> |  Worker Node 1  | <---> |  Worker Node 2  |
|  kube-apiserver |       |  kubelet        |       |  kubelet        |
|  etcd, kubelet  |       |  containerd     |       |  containerd     |
+-----------------+       +-----------------+       +-----------------+

⚙️ Features & Setup
Provisioned using Proxmox VE (manual VM creation)

Kubernetes cluster initialized using kubeadm

Nodes joined with token and kubeadm join

Basic networking configured using Calico or Flannel

Container runtime: containerd or Docker

Access to the cluster via local kubectl

📚 Learning Topics
Kubernetes architecture: Master & worker roles, pods, services

Cluster provisioning & scaling

Troubleshooting deployments

Deploying apps via Helm charts

CI/CD integration (future milestone)

Monitoring (Prometheus + Grafana, planned)








